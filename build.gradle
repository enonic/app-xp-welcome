plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'com.enonic.defaults' version '2.1.5'
    id 'com.enonic.xp.app' version '3.6.2'
    id "com.github.node-gradle.node" version "7.1.0"
}

def xpVersion = version

apply from: "$rootDir/gradle/env.gradle"
apply from: "$rootDir/gradle/node.gradle"

app {
    name = 'com.enonic.xp.app.welcome'
    group = 'com.enonic.xp'
    displayName = 'XP Welcome App'
    systemApp = true
    systemVersion = "${xpVersion}"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    mavenLocal()
    mavenCentral()
    xp.enonicRepo('dev')
}

dependencies {
    implementation "com.enonic.xp:jaxrs-api:${xpVersion}"
    implementation "com.enonic.xp:admin-api:${xpVersion}"
    implementation "com.enonic.xp:portal-api:${xpVersion}"

    include "com.fasterxml.jackson.jr:jackson-jr-objects:2.20.0"
    include "com.enonic.xp:lib-app:${xpVersion}"
    include "com.enonic.xp:lib-admin:${xpVersion}"
    include "com.enonic.xp:lib-auth:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.xp:lib-i18n:${xpVersion}"
    include "com.enonic.xp:lib-vhost:${xpVersion}"
    include "com.enonic.xp:lib-task:${xpVersion}"
    include "com.enonic.xp:lib-websocket:${xpVersion}"
    include "com.enonic.xp:lib-event:${xpVersion}"
    include 'com.enonic.lib:lib-http-client:3.2.2'
    include "com.enonic.lib:lib-mustache:2.1.1"
    include "com.enonic.lib:lib-static:2.1.1"
    include "com.enonic.lib:lib-router:3.2.0"

    testImplementation( testFixtures( "com.enonic.xp:core-api" ) )
    testImplementation "com.enonic.xp:testing:${xpVersion}"
    testImplementation(platform("org.junit:junit-bom:5.13.4"))
    testImplementation(platform("org.mockito:mockito-bom:5.20.0"))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-junit-jupiter'
}

node {
    download = true
    version = '22.16.0'
}

tasks.register('lint', NpmTask) {
    group 'verification'
    dependsOn( npmInstall )
    args = [ 'run', 'lint' ]
    outputs.upToDateWhen { false }
}

tasks.register('vite', NpmTask) {
    dependsOn( npmInstall, lint )
    doLast {
        println "Build mode: " + nodeEnvironment()
    }
    environment = [ 'NODE_ENV': nodeEnvironment() ]
    description = 'Build assets'
    args = [ 'run', 'build' ]
    inputs.dir 'src/main/resources/assets'
    inputs.file 'vite.config.ts'
    outputs.dir "${buildDir}/resources/main"
}

test {
    useJUnitPlatform()
    systemProperty 'java.awt.headless', 'true'
    jvmArgs '-XX:TieredStopAtLevel=1'
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

check.dependsOn( lint, jacocoTestReport )
javadoc.dependsOn( jar, vite )
compileTestJava.dependsOn( jar, vite )

jar {
    exclude 'assets/common/fonts'
    exclude 'assets/common/styles'
    exclude 'assets/common/themes'
    exclude 'assets/common/utils'
    exclude 'assets/**/*.ts'
    exclude 'assets/**/*.tsx'
    exclude 'assets/*/**/*.css'
    exclude 'assets/index.css'
    if (isProd()) {
        exclude 'assets/**/*.map'
    }

    outputs.dir "${buildDir}/resources/main"

    dependsOn += vite
}
