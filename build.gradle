plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'com.enonic.defaults' version '2.1.2'
    id 'com.enonic.xp.app' version '3.3.0'
    id "com.github.node-gradle.node" version "5.0.0"
}

def xpVersion = version

apply from: "$rootDir/gradle/env.gradle"
apply from: "$rootDir/gradle/node.gradle"

app {
    name = 'com.enonic.xp.app.welcome'
    group = 'com.enonic.xp'
    displayName = 'XP Welcome App'
    systemApp = true
    systemVersion = "${xpVersion}"
}

repositories {
    mavenCentral()
    xp.enonicRepo( 'dev' )
}

configurations {
    distro
}

ext {
    unpackDir = "$buildDir/install"
    distroDir = "$unpackDir/enonic-xp-generic-$xpVersion"
    deployDir = "$distroDir/home/deploy"
    xpHome = "$distroDir/home"
    configDir = "$xpHome/config"
    appName = "app-xp-welcome"
    appFile = "$distroDir/system/40/${appName}-${xpVersion}.jar"
    appUrl = project.hasProperty( 'appUrl' ) ? appUrl : "file:///$projectDir/../build/libs/${appName}.jar"
}

dependencies {
    implementation "com.enonic.xp:jaxrs-api:${xpVersion}"
    implementation "com.enonic.xp:admin-api:${xpVersion}"

    include "com.enonic.xp:lib-admin:${xpVersion}"
    include "com.enonic.xp:lib-auth:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.xp:lib-i18n:${xpVersion}"
    include "com.enonic.lib:lib-mustache:2.1.1"

    testImplementation "com.enonic.xp:testing:${xpVersion}"
    testImplementation "org.mockito:mockito-core:5.3.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.3"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.3"
}

node {
    download = true
    version = '20.2.0'
}

task lint( type: NpmTask, group: "verification", dependsOn: npmInstall ) {
    args = [ 'run', 'lint' ]
    outputs.upToDateWhen { false }
}

check.dependsOn lint

task vite( type: NpmTask, dependsOn: [ npmInstall, lint ] ) {
    doLast {
        println "Build mode: " + nodeEnvironment()
    }
    environment = [ 'NODE_ENV': nodeEnvironment() ]
    description = 'Build assets'
    args = [ 'run', 'build' ]
    inputs.dir 'src/main/resources/assets'
    inputs.file 'vite.config.ts'
    outputs.dir "${buildDir}/resources/main"
}

test {
    useJUnitPlatform()
    systemProperty 'java.awt.headless', 'true'
    jvmArgs '-noverify', '-XX:TieredStopAtLevel=1'
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

check.dependsOn jacocoTestReport
javadoc.dependsOn jar, vite
compileTestJava.dependsOn jar, vite

jar {
    exclude 'assets/**/*.less'
    exclude 'assets/main.js'
    if (isProd()) {
        exclude 'assets/**/*.map'
    }

    outputs.dir "${buildDir}/resources/main"

    dependsOn += vite
}
